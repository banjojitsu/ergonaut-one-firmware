#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <200>;
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 5 38 24>;
        };

        bluetooth {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <5 38 12>;
        };
    };

    macros {
        center: center {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk GLOBE &kp LC(C)>;
            label = "CENTER";
        };

        full: full {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk GLOBE &kp LC(F)>;
            label = "FULL";
        };

        left: left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk GLOBE &sk LEFT_CONTROL &kp LEFT_ARROW>;
            label = "LEFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp LG(MINUS)  &kp Q               &kp W           &kp F               &kp P             &kp G    &kp J        &kp L              &kp U                &kp Y           &kp SEMI             &kp LG(EQUAL)
&center        &mt LEFT_CONTROL A  &mt LEFT_ALT R  &mt LEFT_COMMAND S  &mt LEFT_SHIFT T  &kp D    &kp H        &mt RIGHT_SHIFT N  &mt RIGHT_COMMAND E  &mt LEFT_ALT I  &mt RIGHT_CONTROL O  &full
&left          &kp Z               &kp X           &kp C               &kp V             &kp B    &kp K        &kp M              &kp COMMA            &kp DOT         &kp FSLH             &none
                                                   &kp ESCAPE          &lt 3 SPACE       &kp TAB  &lt 1 ENTER  &lt 2 BACKSPACE    &kp DELETE
            >;

            label = "MAIN";
        };

        layer_1 {
            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE  &none   &none  &none  &none  &none  &none
&none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS         &none   &none  &none  &none  &none  &none
&none  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE         &none   &none  &none  &none  &none  &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE   &trans  &none  &none
            >;

            label = "SYM";
        };

        layer_2 {
            bindings = <
&none  &kp LEFT_BRACKET  &kp N7  &kp N8      &kp N9  &kp RIGHT_BRACKET  &none  &none   &none  &none  &none  &none
&none  &kp SEMICOLON     &kp N4  &kp N5      &kp N6  &kp EQUAL          &none  &none   &none  &none  &none  &none
&none  &kp GRAVE         &kp N1  &kp N2      &kp N3  &kp BACKSLASH      &none  &none   &none  &none  &none  &none
                                 &kp PERIOD  &kp N0  &kp MINUS          &none  &trans  &none
            >;

            label = "NUM";
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none   &none  &kp LG(LS(Z))  &kp LG(V)  &kp LG(C)      &kp LG(X)    &kp LG(Z)  &none
&none  &none  &none  &none  &none   &none  &kp CAPSLOCK   &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &none
&none  &none  &none  &none  &none   &none  &kp INSERT     &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
                     &none  &trans  &none  &none          &none      &none
            >;

            label = "NAV";
        };
    };
};
